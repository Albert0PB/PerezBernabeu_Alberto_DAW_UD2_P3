{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Pr\u00e1ctica 2.3 - Proxy inverso con Nginx Clonaci\u00f3n de MV Para crear un servir de proxy inverso, en primer lugar necesitaremos una nueva MV que cumpla con este rol. Para ello, clonamos la m\u00e1quina virtual en la que ya ten\u00edamos configurado Nginx, de manera que tendremos dos m\u00e1quinas virtuales id\u00e9nticas: Cambios en la MV con rol de Server Web Los cambios de este apartado se realizan sobre la MV que vaya a funcionar como servidor web, es decir, la que se enfoca a alojar los datos de nuestra p\u00e1gina. Para ello cambiaremos el nombre de nuestra p\u00e1gina a 'webserver', tanto del directorio en /var/www que contiene los archivos de la p\u00e1gina como en el archivo de configuraci\u00f3n en /etc/nginx/sites-available y el enlace simb\u00f3lico a /etc/nginx/sites-enabled. En primer lugar, ejecutamos: cd /var/www sudo mv despliegue1/ webserver/ A continuaci\u00f3n, para listar los enlaces simb\u00f3licos y comprobar sus nombres podemos ejecutar: cd /etc/nginx/sites-enabled ls -l A continuaci\u00f3n eliminamos el symlink (en mi caso se llama despliegue1 porque es el nombre que le di a mi p\u00e1gina) con el comando: sudo unlink despliegue1 Ahora cambiamos el nombre del sitio a 'webserver' en el archivo de configuraci\u00f3n de la p\u00e1gina. Con: cd /etc/nginx/sites-available mv despliegue1 webserver cambiamos el nombre del archivo en s\u00ed. Realizamos el mismo cambio dentro del archivo de la siguiente manera: [!NOTE] Tambi\u00e9n se podr\u00eda realizar un cambio similar en /etc/hosts pero no es estrictamente necesario para el funcionamiento del servidor. Realizados los cambios sobre el archivo de configuraci\u00f3n, creamos un nuevo enlace simb\u00f3lico ejecutando: sudo ln -s /etc/nginx/sites-available/webserver /etc/nginx/sites-enabled Reiniciamos Nginx y comprobamos que funciona sin errores con: sudo systemctl restart nginx sudo nginx -t Cambios en la MV con rol de Servidor de Proxy Inverso Los cambios de este apartado se realizan sobre la MV que vaya a funcionar como servidor proxy, es decir, la que se encuentra entre servidor y cliente y redirige las peticiones. Cambiaremos el contenido del archivo de configuraci\u00f3n /etc/nginx/sites-available para que redirija las peticiones que reciba al Servidor Web. [!IMPORTANT] Hay que tener especial cuidado con las IPs que estamos utilizando ya que trabajamos con tres m\u00e1quinas distintas. En mi caso son 192.168.0.20 (Webserver), 192.168.0.21 (Proxy) y 192.168.0.13 (M\u00e1quina anfitriona). Ahora, si buscamos en el navegador de nuestra m\u00e1quina anfitriona \"192.168.0.21:80\", se enviar\u00e1 una petici\u00f3n al proxy y ser\u00e1 redirigida al servidor web. Podemos comprobar que la petici\u00f3n haya pasado por ambos servidores leyendo el archivo /var/log/nginx/access.log en ambas m\u00e1quinas. Tambi\u00e9n podemos comprobarlo a\u00f1adiendo una cabecera a la petici\u00f3n desde el servidor proxy, a\u00f1adiendo una l\u00ednea m\u00e1s al archivo de configuraci\u00f3n: Ahora, si inspeccionamos la p\u00e1gina al entrar desde la m\u00e1quina anfitriona: Por lo que queda comprobado que el servidor proxy est\u00e1 funcionando sin problemas.","title":"Pr\u00e1ctica 2.3 - Proxy inverso con Nginx"},{"location":"#practica-23-proxy-inverso-con-nginx","text":"","title":"Pr\u00e1ctica 2.3 - Proxy inverso con Nginx"},{"location":"#clonacion-de-mv","text":"Para crear un servir de proxy inverso, en primer lugar necesitaremos una nueva MV que cumpla con este rol. Para ello, clonamos la m\u00e1quina virtual en la que ya ten\u00edamos configurado Nginx, de manera que tendremos dos m\u00e1quinas virtuales id\u00e9nticas:","title":"Clonaci\u00f3n de MV"},{"location":"#cambios-en-la-mv-con-rol-de-server-web","text":"Los cambios de este apartado se realizan sobre la MV que vaya a funcionar como servidor web, es decir, la que se enfoca a alojar los datos de nuestra p\u00e1gina. Para ello cambiaremos el nombre de nuestra p\u00e1gina a 'webserver', tanto del directorio en /var/www que contiene los archivos de la p\u00e1gina como en el archivo de configuraci\u00f3n en /etc/nginx/sites-available y el enlace simb\u00f3lico a /etc/nginx/sites-enabled. En primer lugar, ejecutamos: cd /var/www sudo mv despliegue1/ webserver/ A continuaci\u00f3n, para listar los enlaces simb\u00f3licos y comprobar sus nombres podemos ejecutar: cd /etc/nginx/sites-enabled ls -l A continuaci\u00f3n eliminamos el symlink (en mi caso se llama despliegue1 porque es el nombre que le di a mi p\u00e1gina) con el comando: sudo unlink despliegue1 Ahora cambiamos el nombre del sitio a 'webserver' en el archivo de configuraci\u00f3n de la p\u00e1gina. Con: cd /etc/nginx/sites-available mv despliegue1 webserver cambiamos el nombre del archivo en s\u00ed. Realizamos el mismo cambio dentro del archivo de la siguiente manera: [!NOTE] Tambi\u00e9n se podr\u00eda realizar un cambio similar en /etc/hosts pero no es estrictamente necesario para el funcionamiento del servidor. Realizados los cambios sobre el archivo de configuraci\u00f3n, creamos un nuevo enlace simb\u00f3lico ejecutando: sudo ln -s /etc/nginx/sites-available/webserver /etc/nginx/sites-enabled Reiniciamos Nginx y comprobamos que funciona sin errores con: sudo systemctl restart nginx sudo nginx -t","title":"Cambios en la MV con rol de Server Web"},{"location":"#cambios-en-la-mv-con-rol-de-servidor-de-proxy-inverso","text":"Los cambios de este apartado se realizan sobre la MV que vaya a funcionar como servidor proxy, es decir, la que se encuentra entre servidor y cliente y redirige las peticiones. Cambiaremos el contenido del archivo de configuraci\u00f3n /etc/nginx/sites-available para que redirija las peticiones que reciba al Servidor Web. [!IMPORTANT] Hay que tener especial cuidado con las IPs que estamos utilizando ya que trabajamos con tres m\u00e1quinas distintas. En mi caso son 192.168.0.20 (Webserver), 192.168.0.21 (Proxy) y 192.168.0.13 (M\u00e1quina anfitriona). Ahora, si buscamos en el navegador de nuestra m\u00e1quina anfitriona \"192.168.0.21:80\", se enviar\u00e1 una petici\u00f3n al proxy y ser\u00e1 redirigida al servidor web. Podemos comprobar que la petici\u00f3n haya pasado por ambos servidores leyendo el archivo /var/log/nginx/access.log en ambas m\u00e1quinas. Tambi\u00e9n podemos comprobarlo a\u00f1adiendo una cabecera a la petici\u00f3n desde el servidor proxy, a\u00f1adiendo una l\u00ednea m\u00e1s al archivo de configuraci\u00f3n: Ahora, si inspeccionamos la p\u00e1gina al entrar desde la m\u00e1quina anfitriona: Por lo que queda comprobado que el servidor proxy est\u00e1 funcionando sin problemas.","title":"Cambios en la MV con rol de Servidor de Proxy Inverso"}]}